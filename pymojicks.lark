start: stmts+

stmts: stmt ";"
     | var
     | function

stmt: stmt "🔁" types -> convert_stmt
    | builtin
    | id paren_expr -> function_call

var: "✏" id "👉" expr ";"
   | "✏" id "👉" stmt ";"

builtin: "📤" paren_expr -> print
       | "📥" paren_expr -> input
       | "🔚" "()" -> exit

paren_expr: "(" expr ("," expr)* ")"
          | "()"

expr: NUMBER -> float
    | string
    | bool -> bool
    | id -> variable

bool: "✔" -> true
    | "❌" -> false

?sum: product
    | sum "+" product   -> add
    | sum "-" product   -> sub

?product: atom
        | product "*" atom  -> mul
        | product "/" atom  -> div

?atom: NUMBER           -> number
     | "-" atom         -> neg
     | NAME             -> var
     | "(" sum ")"

function: "✏️" id "(" func_args? ")" func_body

func_args: func_arg ("," func_arg)*

func_arg: types id

func_body: "▶️" stmts+ "◀️"

string: STRING
id: /[a-zA-Z_][a-zA-Z0-9_]*/ -> identifier

types: "⛔" -> bool_type
     | "🔢" -> float_type
     | "✒️" -> string_type

COMMENT: /👵.*?👴/
       | "💬" /.+/

%import common.LETTER
%import common.WS
%ignore WS
%ignore COMMENT
%import common.CNAME -> NAME
%import common.NUMBER
%import common.WS_INLINE
%import common.ESCAPED_STRING -> STRING
%ignore WS_INLINE
